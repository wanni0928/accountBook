<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Account">
    <!--create-->
    <insert id="save" parameterType="com.accountbook.domain.Account" useGeneratedKeys="true">
        insert into accounts (
            categoryId,
            accountTitle,
            accountContent,
            accountBalance,
            accountStatus
        ) values (
            #{categoryId},
            #{accountTitle},
            #{accountContent},
            #{accountBalance},
            (select accountStatus from category where categoryId = #{categoryId})
        );
    </insert>

    <!--read-->
    <select id="findAll" resultType="com.accountbook.domain.Account">
        select * from accounts
    </select>
    <select id="findById" parameterType="long" resultType="com.accountbook.domain.Account">
        select * from accounts where accountId = #{id}
    </select>
    <select id="findByTitle" parameterType="string" resultType="com.accountbook.domain.Account">
        select * from accounts where accountTitle = #{title}
    </select>
    <select id="findByMonth" parameterType="map" resultType="com.accountbook.domain.Account">
        select * from accounts where month(accountDate) = #{month} and year(accountDate) = #{year};
    </select>
    <select id="findByDay" parameterType="map" resultType="com.accountbook.domain.Account">
        select * from accounts where day(accountDate) = #{day} and month(accountDate) = #{month} and year(accountDate) = #{year};
    </select>

    <!--update-->
    <update id="updateById" parameterType="com.accountbook.domain.Account" statementType="PREPARED">
        update accounts set
            categoryId = #{categoryId},
            accountTitle = #{accountTitle},
            accountContent = #{accountContent},
            accountBalance = #{accountBalance},
            accountStatus = (
            select accountStatus from category where categoryId = #{categoryId}
        )
        where accountId = 3;
    </update>

    <!--delete-->
    <delete id="deleteById" parameterType="long">
        delete from accounts where accountId = #{id}
    </delete>
</mapper>